{"version":3,"sources":["js/index.js"],"names":["form","document","querySelector","ValidateClientSideForm","_form","validator","email","regex","help","text","password","_errors","fields","querySelectorAll","addEventListener","handleSubmit","bind","forEach","field","handleFocus","handleBlur","handleInput","value","type","name","test","validate","removeAlert","id","addAlert","find","setAlert","setError","clearAlert","clearError","classList","add","remove","setAttribute","parentElement","nextElementSibling","textContent","labels","join","errName","includes","push","length","splice","indexOf","el","focus","filter","setFocus","getEmptyFields","addValidation","event","preventDefault","submitForm","target","init"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"../src","sourcesContent":["(function() {\n  const form = document.querySelector(\"form\");\n\n  /**\n   * Client-Side Validation\n   * ATTENTION: Server-side validation is REQUIRED\n   */\n  class ValidateClientSideForm {\n    constructor(form) {\n      this._form = form;\n\n      /*\n      Validation patterns for different field types. Password validation is very loose, don't forget this is only a demo without clear requirement about this type of data.\n      */\n      this.validator = {\n        email: {\n          regex: /^([a-zA-Z0-9\\.-]{1,64})+@([a-z]{1,254})+\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\n          help: \"Looks like this is not an email\"\n        },\n        text: {\n          regex: /^[a-zA-Z\\s]+?$/,\n          help: \"cannot be empty\"\n        },\n        password: {\n          regex: /^[a-zA-Z0-9\\_-]+?$/,\n          help: \"cannot be empty\"\n        }\n      };\n\n      this._errors = [];\n\n      this.fields = [\n        ...this._form.querySelectorAll(\n          \"input[type=text], input[type=email], input[type=password]\"\n        )\n      ];\n    }\n\n    init() {\n      this._form.addEventListener(\"submit\", this.handleSubmit.bind(this));\n\n      this.fields.forEach(field => {\n        field.addEventListener(\"focus\", this.handleFocus.bind(this), true);\n        field.addEventListener(\"blur\", this.handleBlur.bind(this), true);\n        field.addEventListener(\"input\", this.handleInput.bind(this));\n      });\n    }\n\n    validate(field) {\n      const { value, type, name } = field;\n\n      if (value === \"\") return false;\n      else if (name === \"email\")\n        if (this.validator[name].regex.test(value)) return true;\n        else return false;\n      else if (this.validator[type].regex.test(value)) return true;\n      else return false;\n    }\n\n    addValidation(field) {\n      if (this.validate(field)) this.removeAlert(field.id);\n      else this.addAlert(field.id);\n    }\n\n    addAlert(id) {\n      const field = this.fields.find(field => field.id === id);\n      this.setAlert(field);\n      this.setError(field.name);\n    }\n\n    removeAlert(id) {\n      const field = this.fields.find(field => field.id === id);\n      this.clearAlert(field);\n      this.clearError(field.name);\n    }\n\n    setAlert(field) {\n      const { type, name } = field;\n      field.classList.add(\"invalid\");\n      field.classList.remove(\"valid\");\n      field.setAttribute(\"aria-invalid\", true);\n      field.parentElement.nextElementSibling.textContent = `${\n        name === \"email\"\n          ? this.validator[name].help\n          : [field.labels[0].textContent, this.validator[type].help].join(` `)\n      }`;\n    }\n\n    clearAlert(field) {\n      field.classList.remove(\"invalid\");\n      field.classList.add(\"valid\");\n      field.setAttribute(\"aria-invalid\", false);\n      field.parentElement.nextElementSibling.textContent = \"\";\n    }\n\n    setError(errName) {\n      if (this._errors.includes(errName)) return;\n      this._errors.push(errName);\n    }\n\n    clearError(errName) {\n      if (this._errors.length == 0) return;\n      this._errors.splice(this._errors.indexOf(errName), 1);\n    }\n\n    setFocus(name) {\n      const el = this.fields.find(el => el.name === name);\n      el.focus();\n    }\n\n    getEmptyFields() {\n      return this.fields.filter(field => {\n        return field.value === \"\";\n      });\n    }\n\n    submitForm() {\n      // If found errors from instant validation then auto focus the first error\n      if (this._errors.length > 0) {\n        this.setFocus(this._errors[0]);\n        return false;\n      }\n      // else validate fields if user left empty fields\n      else if (this.getEmptyFields().length > 0) {\n        this.getEmptyFields().forEach(field => {\n          this.addValidation(field);\n        });\n        this.setFocus(this.getEmptyFields()[0].name);\n        return false;\n      }\n      // ready to subumit form\n      else return true;\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n\n      // returns true if form has no errors else false forms has errors.\n      this.submitForm();\n    }\n\n    handleFocus({ target }) {\n      target.parentElement.classList.add(\"focused\");\n    }\n\n    handleBlur({ target }) {\n      if (target.value.length == 0) {\n        target.parentElement.classList.remove(\"focused\");\n      }\n    }\n\n    handleInput({ target }) {\n      // handles instant validation the field\n      this.addValidation(target);\n    }\n  }\n\n  new ValidateClientSideForm(form).init();\n})();\n"]}